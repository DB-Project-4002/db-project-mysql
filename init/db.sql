DROP TABLE IF EXISTS match_participations;
DROP TABLE IF EXISTS seasons;
DROP TABLE IF EXISTS sticker_ownerships;
DROP TABLE IF EXISTS loot_ownerships;
DROP TABLE IF EXISTS champion_skin_ownerships;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS stickers;
DROP TABLE IF EXISTS loots;
DROP TABLE IF EXISTS champion_skins;
DROP TABLE IF EXISTS champions;
DROP TABLE IF EXISTS game_accounts;
DROP TABLE IF EXISTS account_settings;
DROP TABLE IF EXISTS accounts_relations;
DROP TABLE IF EXISTS connected_accounts;
DROP TABLE IF EXISTS accounts;

CREATE TABLE accounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    tag VARCHAR(5) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE username (name, tag)
);

CREATE TABLE connected_accounts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    account_id INT NOT NULL,
    type VARCHAR(255) NOT NULL,
    token TEXT NOT NULL,
    address VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
);
    
CREATE TABLE accounts_relations (
    account_id_1 INT NOT NULL,
    account_id_2 INT NOT NULL,
    blocked TINYINT(1) NOT NULL DEFAULT 0,
    friend TINYINT(1) NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id_1) REFERENCES accounts(id) ON DELETE CASCADE,
    FOREIGN KEY (account_id_2) REFERENCES accounts(id) ON DELETE CASCADE
);

CREATE TABLE account_settings (
    account_id INT NOT NULL,
    is_2fa_enabled TINYINT(1) NOT NULL DEFAULT 0,
    is_subscribed_to_news TINYINT(1) NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
);

CREATE TABLE game_accounts (
    account_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    level INT UNSIGNED NOT NULL,
    avatar VARCHAR(255) NOT NULL,
    avatar_border_id INT UNSIGNED NOT NULL,
    game_credit INT UNSIGNED NOT NULL DEFAULT 0,
    blue_essence INT UNSIGNED NOT NULL DEFAULT 1000,
    orange_essence INT UNSIGNED NOT NULL DEFAULT 200,
    mythic_essence INT UNSIGNED NOT NULL DEFAULT 10,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE
);

CREATE TABLE champions (
    name VARCHAR(255) PRIMARY KEY,
    blue_essence_price INT UNSIGNED NOT NULL,
    game_credit_price INT UNSIGNED NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE champion_skins (
    name VARCHAR(255) PRIMARY KEY,
    champion_name VARCHAR(255) NOT NULL,
    orange_essence_price INT UNSIGNED NOT NULL,
    game_credit_price INT UNSIGNED NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (champion_name) REFERENCES champions(name) ON DELETE CASCADE
);

CREATE TABLE loots (
    name VARCHAR(255) PRIMARY KEY,
    mythic_essence_price INT UNSIGNED NOT NULL,
    game_credit_price INT UNSIGNED NOT NULL,
    type VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE stickers (
    name VARCHAR(255) PRIMARY KEY,
    game_credit_price INT UNSIGNED NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE items (
    name VARCHAR(255) PRIMARY KEY,
    price INT UNSIGNED NOT NULL,
    ad  INT UNSIGNED NOT NULL,
    ap  INT UNSIGNED NOT NULL,
    hp  INT UNSIGNED NOT NULL,
    cdr INT UNSIGNED NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE champion_skin_ownerships (
    account_id INT NOT NULL,
    champion_name VARCHAR(255) NOT NULL,
    champion_skin_name VARCHAR(255) NOT NULL,
    PRIMARY KEY (account_id, champion_name, champion_skin_name),
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
    FOREIGN KEY (champion_name) REFERENCES champions(name) ON DELETE CASCADE,
    FOREIGN KEY (champion_skin_name) REFERENCES champion_skins(name) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE loot_ownerships (
    account_id INT NOT NULL,
    loot_name VARCHAR(255) NOT NULL,
    count INT NOT NULL DEFAULT 0,
    PRIMARY KEY (account_id, loot_name),
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
    FOREIGN KEY (loot_name) REFERENCES loots(name) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE sticker_ownerships (
    account_id INT NOT NULL,
    sticker_name VARCHAR(255) NOT NULL,
    PRIMARY KEY (account_id, sticker_name),
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
    FOREIGN KEY (sticker_name) REFERENCES stickers(name) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE seasons (
    number INT NOT NULL,
    account_id INT NOT NULL,
    rating INT NOT NULL,
    ranking INT NOT NULL,
    PRIMARY KEY (account_id, number),
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE match_participations (
    account_id INT NOT NULL,
    time TIMESTAMP NOT NULL,
    grade ENUM('A-', 'A', 'A+', 'B-', 'B', 'B+', 'C-', 'C', 'C+') NOT NULL,
    kills INT NOT NULL,
    death INT NOT NULL,
    assists INT NOT NULL,
    cs INT NOT NULL,
    ds INT NOT NULL,
    dragons INT NOT NULL,
    rifts INT NOT NULL,
    item_1 VARCHAR(255) NULL,
    item_2 VARCHAR(255) NULL,
    item_3 VARCHAR(255) NULL,
    item_4 VARCHAR(255) NULL,
    item_5 VARCHAR(255) NULL,
    item_6 VARCHAR(255) NULL,
    PRIMARY KEY (account_id, time),
    FOREIGN KEY (account_id) REFERENCES accounts(id) ON DELETE CASCADE,
    FOREIGN KEY (item_1) REFERENCES items(name) ON DELETE CASCADE,
    FOREIGN KEY (item_2) REFERENCES items(name) ON DELETE CASCADE,
    FOREIGN KEY (item_3) REFERENCES items(name) ON DELETE CASCADE,
    FOREIGN KEY (item_4) REFERENCES items(name) ON DELETE CASCADE,
    FOREIGN KEY (item_5) REFERENCES items(name) ON DELETE CASCADE,
    FOREIGN KEY (item_6) REFERENCES items(name) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
